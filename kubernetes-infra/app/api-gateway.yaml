apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app
  name: api-gateway
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: 838107339577.dkr.ecr.ap-south-1.amazonaws.com/w-k-s/services-marketplace/api-gateway:37b0549e29fee3ef3eb0a1d7b334e1e80f34f95b
          imagePullPolicy: Always
          env:
            - name: APPLICATION_HOSTS_CUSTOMER_SERVICE
              value: http://customer-service
            - name: APPLICATION_HOSTS_AUTH_SERVICE
              value: http://auth-service
            - name: APPLICATION_HOSTS_ORDER_SERVICE
              value: http://order-service
            - name: APPLICATION_HOSTS_SERVICE_PROVIDER_SERVICE
              value: http://service-provider-service
          ports:
            - containerPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  namespace: app
  name: api-gateway
spec:
  selector:
    app: api-gateway
  ports:
    - port: 80
      targetPort: 8080
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: api-ingress
  namespace: app
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/healthcheck-path: /actuator/health
    alb.ingress.kubernetes.io/scheme: internet-facing
spec:
  rules:
    - host: servicesmarketplace.w-k-s.io
      http:
        paths:
          - path: /*
            backend:
              serviceName: api-gateway
              servicePort: 80