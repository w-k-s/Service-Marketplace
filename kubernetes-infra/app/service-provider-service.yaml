apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: app
  name: service-provider-service
spec:
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
  selector:
    matchLabels:
      app: service-provider-service
  template:
    metadata:
      labels:
        app: service-provider-service
    spec:
      containers:
        - name: service-provider-service
          image: 838107339577.dkr.ecr.ap-south-1.amazonaws.com/w-k-s/services-marketplace/service-provider-service:8a615f5c196e33ec729bd877c1c9013ce1ba21af
          imagePullPolicy: Always
          env:
            - name: JDBC_URL
              valueFrom:
                secretKeyRef:
                  name: service-provider-service.servicesmarketplace.w-k-s.io
                  key: JDBC_URL
            - name: JDBC_USERNAME
              valueFrom:
                secretKeyRef:
                  name: service-provider-service.servicesmarketplace.w-k-s.io
                  key: JDBC_USERNAME
            - name: JDBC_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: service-provider-service.servicesmarketplace.w-k-s.io
                  key: JDBC_PASSWORD
            - name: AMQP_URI
              valueFrom:
                secretKeyRef:
                  name: service-provider-service.servicesmarketplace.w-k-s.io
                  key: AMQP_URI
            - name: AUTHSERVICE_CLIENT_ID
              value: service-provider-service
            - name: AUTHSERVICE_CLIENT_SECRET
              # TODO: Put in Hashicorp Vault and change credentials
              value: Password@1
            - name: FUSIONAUTH_SERVER_URL
              value: http://fusionauth
            - name: AUTHSERVICE_HOST_URL
              value: http://auth-service:8082
            - name: SERVER_HOST
              value: "0.0.0.0"
            - name: SERVER_PORT
              value: "8084"
          ports:
            - containerPort: 8084
          livenessProbe:
            httpGet:
              path: /health
              port: 8084
            initialDelaySeconds: 10
            periodSeconds: 3
          readinessProbe:
            httpGet:
              path: /health
              port: 8084
            initialDelaySeconds: 10
            periodSeconds: 3
---
apiVersion: v1
kind: Service
metadata:
  namespace: app
  name: service-provider-service
spec:
  selector:
    app: service-provider-service
  ports:
    - port: 80
      targetPort: 8084
  type: ClusterIP