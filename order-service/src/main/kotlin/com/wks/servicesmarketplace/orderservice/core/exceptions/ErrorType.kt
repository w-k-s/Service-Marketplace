package com.wks.servicesmarketplace.orderservice.core.exceptions

enum class ErrorType(val code: Int) {
    UNKNOWN(ErrorType.GENERAL_ERROR_UNKNOWN),
    VALIDATION(ErrorType.GENERAL_ERROR_VALIDATION),
    NOT_FOUND(ErrorType.GENERAL_ERROR_NOT_FOUND),
    UNAUTHENTICATED(ErrorType.GENERAL_ERROR_UNAUTHENTICATED),
    INSUFFICIENT_PRIVILEGES(ErrorType.GENERAL_ERROR_UNAUTHORIZED),
    USER_ID_MISSING(ErrorType.GENERAL_ERROR_USER_ID_MISSING),
    INVALID_STATE(ErrorType.GENERAL_ERROR_INVALID_STATE),
    INVALID_COUNTRY(ErrorType.SERVICE_ORDER_ERROR_INVALID_COUNTRY),
    ADDRESS_NOT_FOUND(ErrorType.SERVICE_ORDER_ERROR_ADDRESS_NOT_FOUND),
    SERVICE_ORDER_NOT_FOUND(ErrorType.SERVICE_ORDER_ERROR_ORDER_NOT_FOUND);

    companion object {
        // -- Generic Errors
        private const val GENERAL_ERROR_UNKNOWN = 100000
        private const val GENERAL_ERROR_VALIDATION = 100001
        private const val GENERAL_ERROR_NOT_FOUND = 100010
        private const val GENERAL_ERROR_INVALID_STATE = 100020
        private const val GENERAL_ERROR_UNAUTHENTICATED = 100030
        private const val GENERAL_ERROR_UNAUTHORIZED = 100031
        private const val GENERAL_ERROR_USER_ID_MISSING = 100032

        // -- Service Order Errors
        private const val SERVICE_ORDER_ERROR_ADDRESS_NOT_FOUND = 100110
        private const val SERVICE_ORDER_ERROR_INVALID_COUNTRY = 100111
        private const val SERVICE_ORDER_ERROR_ORDER_NOT_FOUND = 100120
    }
}