type ServiceOrderResponse{
    orderId: String!
    customerId: Int!
    serviceCategoryId: Int!
    title: String!
    description: String!
    orderDateTime: String!
    status: String!
    rejectReason: String
    version: Int!
}

type Money{
    amount: Float!
    currency: String!
}

type Address{
    externalId: Int!
    customerExternalId: Int!
    name: String!
    line1: String!
    line2: String
    city: String!
    country: String!
    latitude: Float!
    longitude: Float!
    version: Int!
}

type OrderIdResponse{
    orderId: String!
}

input ServiceOrderRequest {
    customerExternalId: Int!
    addressExternalId: Int!
    serviceCategoryId: Int!
    title: String!
    description: String!
    orderDateTime: String!
}


type Query{
    getServiceOrderById(orderId: String!): ServiceOrderResponse!
}

type Mutation{
    createServiceOrder(order: ServiceOrderRequest!): OrderIdResponse!
}

schema{
    query: Query
    mutation: Mutation
}
