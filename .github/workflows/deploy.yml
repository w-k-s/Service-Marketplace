name: Deploy
on:
  workflow_dispatch:
    branches:
      - master

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: dev
    env:
      AWS_DEFAULT_REGION: ${{ secrets.AWS_REGION }}
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      PERSONAL_ACCESS_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}
      DB_INSTANCE_URL: ${{ secrets.DB_INSTANCE_URL }} # should not end with '/'
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }} 
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD}}
      HOSTED_ZONE_ID: ${{ secrets.HOSTED_ZONE_ID }}
      FUSIONAUTH_URL: ${{ secrets.FUSIONAUTH_URL }}
      FUSIONAUTH_APPLICATION_ID: ${{ secrets.FUSIONAUTH_APPLICATION_ID }}
      FUSIONAUTH_TENANT_ID: ${{ secrets.FUSIONAUTH_TENANT_ID }}
      FUSIONAUTH_API_KEY: ${{ secrets.FUSIONAUTH_API_KEY }}
      AUTHSERVICE_CLIENT_ID: ${{ secrets.AUTHSERVICE_CLIENT_ID }}
      AUTHSERVICE_CLIENT_SECRET: ${{ secrets.AUTHSERVICE_CLIENT_SECRET }}
      TF_VAR_notification_email: ${{ secrets.NOTIFICATION_EMAIL }}
      TF_VAR_cloudamqp_customer_api_key: ${{ secrets.CLOUD_AMQP_CUSTOMER_API_KEY }}
      TF_VAR_cloudamqp_region: ${{ secrets.CLOUD_AMQP_REGION }}
      TF_VAR_aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
      TF_VAR_aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      TF_VAR_vpc_id: ${{ secrets.VPC_ID }}
      TF_VAR_private_subnet_ids : ${{ secrets.PRIVATE_SUBNET_IDS }}
      TF_VAR_public_subnet_ids : ${{ secrets.PUBLIC_SUBNET_IDS }}
    defaults:
      run:
        working-directory: ./terraform
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: 0.14.7

      - name: Terraform Format
        id: fmt
        run: terraform fmt -check

      - name: Terraform Init
        id: init
        run: terraform init

      - name: Terraform Apply
        run: terraform apply -auto-approve

      - name: Configure Kubectl
        run: aws eks --region "$AWS_DEFAULT_REGION" update-kubeconfig --name $(terraform output cluster_name)

      - name: Deploy Kubernetes Dashboard
        run: |
          wget -O v0.3.6.tar.gz https://codeload.github.com/kubernetes-sigs/metrics-server/tar.gz/v0.3.6 && tar -xzf v0.3.6.tar.gz
          kubectl apply -f metrics-server-0.3.6/deploy/1.8+/
          echo "Maybe later setup a Kubernetes dashboard: https://learn.hashicorp.com/tutorials/terraform/eks"

      - name: Create Kubernetes secrets (deprecated)
        # This will be replaced with ExternalSecrets and AWS Secrets/Hashicorp Vault
        run: |
          kubectl create ns services-marketplace;

          kubectl -n services-marketplace create secret generic fusionauth.servicesmarketplace.w-k-s.io \
          --from-literal=DATABASE_URL="$DB_INSTANCE_URL/fusionauth" \
          --from-literal=DATABASE_ROOT_USER="$DATABASE_USERNAME" \
          --from-literal=DATABASE_ROOT_PASSWORD="$DATABASE_PASSWORD" \
          --from-literal=DATABASE_USER="$DATABASE_USERNAME" \
          --from-literal=DATABASE_PASSWORD="$DATABASE_PASSWORD";

          kubectl -n services-marketplace create secret generic authservice.servicesmarketplace.w-k-s.io \
          --from-literal=FUSIONAUTH_APPLICATION_ID="$FUSIONAUTH_APPLICATION_ID" \
          --from-literal=FUSIONAUTH_TENANT_ID="$FUSIONAUTH_TENANT_ID" \
          --from-literal=FUSIONAUTH_API_KEY="$FUSIONAUTH_API_KEY" \
          --from-literal=AUTHSERVICE_CLIENT_ID="$AUTHSERVICE_CLIENT_ID" \
          --from-literal=AUTHSERVICE_CLIENT_SECRET="$AUTHSERVICE_CLIENT_SECRET" \
          --from-literal=JDBC_URL="$DB_INSTANCE_URL/sm-auth" \
          --from-literal=JDBC_USERNAME="$DATABASE_USERNAME" \
          --from-literal=JDBC_PASSWORD="$DATABASE_PASSWORD" \
          --from-literal=AMQP_URI=$(terraform output cloudamqp_url);

      - name: Deploy FusionAuth
        working-directory: ./auth-service/kubernetes
        run: |
          kubectl apply -f .
          export RECORD_SET_DOMAIN_NAME="$FUSIONAUTH_URL"
          export RECORD_SET_TYPE="CNAME"
          sleep 120          
          export RECORD_SET_VALUE=$(kubectl -n services-marketplace get svc fusionauth -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
          envsubst < ../../.github/workflows/change-resource-record-sets.tmpl > change-resource-record-sets.json
          aws route53 change-resource-record-sets --hosted-zone-id "$HOSTED_ZONE_ID" --change-batch file://change-resource-record-sets.json
